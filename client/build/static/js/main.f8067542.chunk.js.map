{"version":3,"sources":["utils/index.js","contexts/AllTodosContext.js","hooks/useLocalStorage.js","components/Input.js","components/DeleteModal.js","components/EditModal.js","components/TodoItem.js","components/ListTodos.js","components/Dropdown.js","App.js","index.js"],"names":["URL","process","console","log","fetchTodos","a","fetch","response","json","data","error","message","editTodo","description","id","body","method","JSON","stringify","headers","window","location","toggleTodo","toggleId","TodoListContext","React","createContext","useTodoList","useContext","TodoListProvider","children","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","parse","value","setValue","useEffect","setItem","useLocalStorage","todoList","setTodoList","setDescription","onSubmitTodo","e","preventDefault","length","alert","Provider","Input","className","Form","onSubmit","InputGroup","Control","type","placeholder","onChange","target","Button","style","fontSize","paddingTop","paddingBottom","variant","DeleteModal","activeTodo","setOpenModal","openModal","handleDelete","deleteId","filter","todo","todo_id","Modal","show","onHide","Header","Title","Body","Footer","onClick","EditModal","handleEdit","TodoItem","openDeleteModal","setOpenDeleteModal","openEditModal","setOpenEditModal","setActiveTodo","ListGroup","Item","marginBottom","width","textDecorationLine","is_done","ButtonGroup","ListTodos","isMounted","then","Spinner","animation","role","map","Dropdown","prompt","open","setOpen","cursor","setCursor","searchQuery","setSearchQuery","options","setOptions","inputRef","useRef","toggleDropdown","current","document","addEventListener","searchItems","removeEventListener","q","opts","forEach","obj","toLocaleLowerCase","includes","toLowerCase","push","slice","handleSelect","val","ref","onKeyDown","cur","keyboardNavigation","onMouseOver","onMouseOut","option","index","App","Container","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8067542.chunk.js","sourcesContent":["export const URL =\r\n  process.env.NODE_ENV === 'development'\r\n    ? process.env.REACT_APP_DEV_URL\r\n    : process.env.REACT_APP_PRODUCTION_URL\r\nconsole.log(URL, process.env.NODE_ENV)\r\n\r\nexport const fetchTodos = async () => {\r\n  try {\r\n    const response = await fetch(URL)\r\n    const data = await response.json()\r\n    console.log(data)\r\n    return data\r\n  } catch (err) {\r\n    console.error(err.message)\r\n  }\r\n}\r\n\r\nexport const editTodo = async (description, id) => {\r\n  try {\r\n    const body = { description }\r\n\r\n    await fetch(`${URL}/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(body),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n\r\n    window.location = '/'\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport const toggleTodo = async (toggleId) => {\r\n  try {\r\n    await fetch(`${URL}/toggle/${toggleId}`, { method: 'PUT' })\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\nimport { URL } from '../utils'\r\n\r\nconst TodoListContext = React.createContext()\r\n\r\nexport function useTodoList() {\r\n  return useContext(TodoListContext)\r\n}\r\n\r\nexport function TodoListProvider({ children }) {\r\n  const [todoList, setTodoList] = useLocalStorage('todolist', [])\r\n  const [description, setDescription] = useState('')\r\n\r\n  const onSubmitTodo = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const body = { description }\r\n\r\n      if (description.length < 3) {\r\n        alert('You must type at least 3 characters')\r\n      } else {\r\n        await fetch(URL, {\r\n          method: 'POST',\r\n          body: JSON.stringify(body),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        })\r\n        setDescription('')\r\n      }\r\n      window.location = '/'\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TodoListContext.Provider\r\n      value={{\r\n        todoList,\r\n        setTodoList,\r\n        onSubmitTodo,\r\n        description,\r\n        setDescription,\r\n      }}\r\n    >\r\n      {children}\r\n    </TodoListContext.Provider>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'pern-todo-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, InputGroup } from 'react-bootstrap'\r\nimport { useTodoList } from './../contexts/AllTodosContext'\r\n\r\nconst Input = () => {\r\n  const { description, setDescription, onSubmitTodo } = useTodoList()\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='text-center mt-5'>Pern Todo App</h1>\r\n      <div>\r\n        <Form onSubmit={onSubmitTodo} className='d-flex mt-5'>\r\n          <InputGroup className='mb-3'>\r\n            <Form.Control\r\n              value={description}\r\n              type='text'\r\n              placeholder='Enter a new todo'\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <Button\r\n              style={{ fontSize: '19px', paddingTop: '0', paddingBottom: '0' }}\r\n              variant='success'\r\n              type='submit'\r\n            >\r\n              <i className='fa fa-paper-plane'></i>\r\n            </Button>\r\n          </InputGroup>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { useTodoList } from '../contexts/AllTodosContext'\r\nimport { URL } from '../utils'\r\n\r\nconst DeleteModal = ({ activeTodo, setOpenModal, openModal }) => {\r\n  const { todoList, setTodoList } = useTodoList()\r\n\r\n  const handleDelete = async (deleteId) => {\r\n    try {\r\n      await fetch(`${URL}/${deleteId}`, { method: 'DELETE' })\r\n      setTodoList(todoList.filter((todo) => todo.todo_id !== deleteId))\r\n      setOpenModal(false)\r\n\r\n      console.log(`${URL}/${deleteId}`)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  return (\r\n    <Modal show={openModal} onHide={() => setOpenModal(false)}>\r\n      <Modal.Header>\r\n        <Modal.Title>Delete Todo</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        Do you want to delete \"{activeTodo.description}\" ?\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant='danger'\r\n          onClick={() => handleDelete(activeTodo.todo_id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button variant='secondary' onClick={() => setOpenModal(false)}>\r\n          Cancel\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DeleteModal\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport { editTodo } from './../utils/index'\r\n\r\nconst EditModal = ({ activeTodo, setOpenModal, openModal }) => {\r\n  const [description, setDescription] = useState(activeTodo.description)\r\n\r\n  const handleEdit = (e) => {\r\n    e.preventDefault()\r\n    editTodo(description, activeTodo.todo_id)\r\n    setOpenModal(false)\r\n  }\r\n  return (\r\n    <Modal show={openModal} onHide={() => setOpenModal(false)}>\r\n      <Modal.Header>\r\n        <Modal.Title>Edit Todo</Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={(e) => handleEdit(e)}>\r\n        <Modal.Body>\r\n          <Form.Control\r\n            value={description}\r\n            type='text'\r\n            placeholder='Enter a new todo'\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button type='submit'>Save</Button>\r\n          <Button variant='secondary' onClick={() => setOpenModal(false)}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditModal\r\n","import React, { useState } from 'react'\r\nimport { ListGroup, Button, ButtonGroup } from 'react-bootstrap'\r\nimport { toggleTodo } from '../utils'\r\nimport DeleteModal from './DeleteModal'\r\nimport EditModal from './EditModal'\r\n\r\nconst TodoItem = ({ todo }) => {\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false)\r\n  const [openEditModal, setOpenEditModal] = useState(false)\r\n  const [activeTodo, setActiveTodo] = useState()\r\n\r\n  const handleDeleteShow = (e) => {\r\n    setActiveTodo(e)\r\n    setOpenDeleteModal(true)\r\n  }\r\n\r\n  const handleToggle = (toggleId) => {\r\n    toggleTodo(toggleId)\r\n    window.location = '/'\r\n  }\r\n\r\n  const handleEditShow = (e) => {\r\n    setActiveTodo(e)\r\n    setOpenEditModal(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ListGroup.Item\r\n        className='d-flex justify-content-between'\r\n        key={todo.todo_id}\r\n      >\r\n        <p\r\n          onClick={() => handleToggle(todo.todo_id)}\r\n          style={{\r\n            marginBottom: '0',\r\n            paddingBottom: '0',\r\n            width: '100%',\r\n            textDecorationLine: `${todo.is_done ? 'line-through' : 'none'} `,\r\n          }}\r\n        >\r\n          {todo.description}\r\n        </p>\r\n        <ButtonGroup>\r\n          <Button className='but' onClick={() => handleEditShow(todo)}>\r\n            <i className='fa fa-edit'></i>\r\n          </Button>\r\n          <Button\r\n            className='but'\r\n            onClick={() => handleDeleteShow(todo)}\r\n            variant='danger'\r\n          >\r\n            <i className='fa fa-trash'></i>\r\n          </Button>\r\n        </ButtonGroup>\r\n      </ListGroup.Item>\r\n      {openDeleteModal && (\r\n        <DeleteModal\r\n          activeTodo={activeTodo}\r\n          openModal={openDeleteModal}\r\n          setOpenModal={setOpenDeleteModal}\r\n        />\r\n      )}\r\n      {openEditModal && (\r\n        <EditModal\r\n          activeTodo={activeTodo}\r\n          openModal={openEditModal}\r\n          setOpenModal={setOpenEditModal}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoItem\r\n","import { useEffect } from 'react'\r\nimport { ListGroup, Spinner } from 'react-bootstrap'\r\nimport { useTodoList } from '../contexts/AllTodosContext'\r\nimport TodoItem from './TodoItem'\r\nimport { fetchTodos } from './../utils/index'\r\n\r\nconst ListTodos = () => {\r\n  const { todoList, setTodoList } = useTodoList()\r\n\r\n  useEffect(() => {\r\n    let isMounted = true\r\n    fetchTodos().then((data) => isMounted && setTodoList(data))\r\n    return () => {\r\n      isMounted = false\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h1 className='text-center mt-5'>Todo List</h1>\r\n      <div>\r\n        <ListGroup>\r\n          {todoList.length === 0 ? (\r\n            <Spinner animation='border' role='status'>\r\n              <span className='visually-hidden'>Loading...</span>\r\n            </Spinner>\r\n          ) : (\r\n            <>\r\n              {todoList.map((todo) => (\r\n                <TodoItem key={todo.todo_id} todo={todo} />\r\n              ))}\r\n            </>\r\n          )}\r\n        </ListGroup>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListTodos\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useTodoList } from '../contexts/AllTodosContext'\r\nimport './Dropdown.css'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst Dropdown = ({ value, setValue, prompt }) => {\r\n  const { todoList } = useTodoList()\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [cursor, setCursor] = useState(0)\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [options, setOptions] = useState([])\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', toggleDropdown)\r\n\r\n    searchItems(searchQuery)\r\n    return () => {\r\n      document.removeEventListener('click', toggleDropdown)\r\n    }\r\n  }, [searchQuery])\r\n\r\n  function toggleDropdown(e) {\r\n    setOpen(e && e.target === inputRef.current)\r\n  }\r\n\r\n  const searchItems = (q) => {\r\n    let opts = []\r\n    if (q) {\r\n      todoList.forEach((obj) => {\r\n        obj.description.toLocaleLowerCase().includes(q.toLowerCase()) &&\r\n          opts.push(obj)\r\n      })\r\n\r\n      setOptions(opts.slice(0, 4))\r\n    } else {\r\n      return 'not found'\r\n    }\r\n  }\r\n\r\n  const keyboardNavigation = (e) => {\r\n    switch (e.key) {\r\n      case 'ArrowDown':\r\n        open\r\n          ? setCursor((cur) => (cur < options.length - 1 ? cur + 1 : 0))\r\n          : setOpen(true)\r\n        break\r\n\r\n      case 'ArrowUp':\r\n        setCursor((cur) => (cur > 0 ? cur - 1 : options.length - 0))\r\n        break\r\n\r\n      case 'Escape':\r\n        setOpen(false)\r\n        break\r\n\r\n      case 'Enter':\r\n        options && cursor > -1 && handleSelect(options[cursor])\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  //debouncing\r\n  function handleSelect(val) {\r\n    setValue(val)\r\n    setOpen(false)\r\n    setCursor(0)\r\n    setOptions([])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='dropdown'>\r\n        <div className='control'>\r\n          <div className='selected-value'>\r\n            <input\r\n              data-testid='input'\r\n              ref={inputRef}\r\n              placeholder={value ? value.description : prompt}\r\n              type='text'\r\n              value={value ? value.description : searchQuery}\r\n              onChange={(e) => {\r\n                !open && setOpen(true)\r\n                setSearchQuery(e.target.value)\r\n                setValue(null)\r\n              }}\r\n              onKeyDown={(e) => keyboardNavigation(e)}\r\n              onMouseOver={() => setCursor(0)}\r\n              onMouseOut={() => setCursor(0)}\r\n            />\r\n          </div>\r\n          <div data-testid='arrow' className={`arrow ${open && 'open'}`}></div>\r\n        </div>\r\n        <div data-testid='options' className={`options ${open && 'open'}`}>\r\n          {options.length > 0 &&\r\n            options.map((option, index) => (\r\n              <div\r\n                data-testid={`opt${index}`}\r\n                className={`option ${\r\n                  (value === option && 'selected') ||\r\n                  (option === options[cursor] && 'selected')\r\n                }`}\r\n                onClick={() => {\r\n                  handleSelect(option)\r\n                }}\r\n                key={option.todo_id}\r\n              >\r\n                {option.description}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      {value && <TodoItem todo={value} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dropdown\r\n","import './App.css'\nimport Input from './components/Input'\nimport { Container } from 'react-bootstrap'\nimport ListTodos from './components/ListTodos'\nimport { TodoListProvider } from './contexts/AllTodosContext'\nimport Dropdown from './components/Dropdown'\nimport { useState } from 'react'\n\nfunction App() {\n  const [value, setValue] = useState(null)\n  return (\n    <TodoListProvider>\n      <Container>\n        <Input />\n        <Dropdown\n          prompt='Search...'\n          setValue={setValue}\n          onChange={(val) => setValue(val)}\n          value={value}\n        />\n        <ListTodos />\n      </Container>\n    </TodoListProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}