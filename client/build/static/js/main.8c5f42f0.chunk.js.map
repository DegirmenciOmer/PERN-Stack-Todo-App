{"version":3,"sources":["contexts/AllTodosContext.js","hooks/useLocalStorage.js","components/Input.js","components/DeleteModal.js","components/EditModal.js","components/ListTodos.js","App.js","index.js"],"names":["TodoListContext","React","createContext","URL","process","useTodoList","useContext","TodoListProvider","children","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useLocalStorage","todoList","setTodoList","description","setDescription","onSubmitTodo","e","a","preventDefault","body","length","alert","fetch","method","headers","window","location","console","log","Provider","Input","className","Form","onSubmit","InputGroup","Control","type","placeholder","onChange","target","Button","style","fontSize","paddingTop","paddingBottom","variant","DeleteModal","activeTodo","setOpenModal","openModal","handleDelete","deleteId","filter","todo","todo_id","error","Modal","show","onHide","Header","Title","Body","Footer","onClick","EditModal","handleEdit","ListTodos","openDeleteModal","setOpenDeleteModal","openEditModal","setOpenEditModal","setActiveTodo","toggleTodo","toggleId","fetchTodos","response","json","data","message","ListGroup","map","Item","marginTop","width","textDecorationLine","is_done","ButtonGroup","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c5f42f0.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\nconst TodoListContext = React.createContext()\r\n\r\nexport const URL = process.env.REACT_APP_DEV_URL\r\n\r\nexport function useTodoList() {\r\n  return useContext(TodoListContext)\r\n}\r\n\r\nexport function TodoListProvider({ children }) {\r\n  const [todoList, setTodoList] = useLocalStorage('todolist', [])\r\n  const [description, setDescription] = useState('')\r\n\r\n  const onSubmitTodo = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const body = { description }\r\n\r\n      if (description.length < 3) {\r\n        alert('You must type at least 3 characters')\r\n      } else {\r\n        await fetch(URL, {\r\n          method: 'POST',\r\n          body: JSON.stringify(body),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        })\r\n        setDescription('')\r\n      }\r\n      window.location = '/'\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TodoListContext.Provider\r\n      value={{\r\n        todoList,\r\n        setTodoList,\r\n        onSubmitTodo,\r\n        description,\r\n        setDescription,\r\n      }}\r\n    >\r\n      {children}\r\n    </TodoListContext.Provider>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'pern-todo-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, InputGroup } from 'react-bootstrap'\r\nimport { useTodoList } from './../contexts/AllTodosContext'\r\n\r\nconst Input = () => {\r\n  const { description, setDescription, onSubmitTodo } = useTodoList()\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='text-center mt-5'>Pern Todo App</h1>\r\n      <div>\r\n        <Form onSubmit={onSubmitTodo} className='d-flex mt-5'>\r\n          <InputGroup>\r\n            <Form.Control\r\n              value={description}\r\n              type='text'\r\n              placeholder='Enter a new todo'\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <Button\r\n              style={{ fontSize: '19px', paddingTop: '0', paddingBottom: '0' }}\r\n              variant='success'\r\n              type='submit'\r\n            >\r\n              <i className='fa fa-paper-plane'></i>\r\n            </Button>\r\n          </InputGroup>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { URL, useTodoList } from '../contexts/AllTodosContext'\r\n\r\nconst DeleteModal = ({ activeTodo, setOpenModal, openModal }) => {\r\n  const { todoList, setTodoList } = useTodoList()\r\n\r\n  const handleDelete = async (deleteId) => {\r\n    try {\r\n      await fetch(`${URL}/${deleteId}`, { method: 'DELETE' })\r\n      setTodoList(todoList.filter((todo) => todo.todo_id !== deleteId))\r\n      setOpenModal(false)\r\n\r\n      console.log(`${URL}/${deleteId}`)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  return (\r\n    <Modal show={openModal} onHide={() => setOpenModal(false)}>\r\n      <Modal.Header>\r\n        <Modal.Title>Delete Todo</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        Do you want to delete \"{activeTodo.description}\" ?\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant='danger'\r\n          onClick={() => handleDelete(activeTodo.todo_id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button variant='secondary' onClick={() => setOpenModal(false)}>\r\n          Cancel\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DeleteModal\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport { URL } from '../contexts/AllTodosContext'\r\n\r\nconst EditModal = ({ activeTodo, setOpenModal, openModal }) => {\r\n  const [description, setDescription] = useState(activeTodo.description)\r\n\r\n  const handleEdit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const body = { description }\r\n\r\n      await fetch(`${URL}/${activeTodo.todo_id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(body),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      })\r\n      setOpenModal(false)\r\n\r\n      window.location = '/'\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  return (\r\n    <Modal show={openModal} onHide={() => setOpenModal(false)}>\r\n      <Modal.Header>\r\n        <Modal.Title>Edit Todo</Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={(e) => handleEdit(e)}>\r\n        <Modal.Body>\r\n          <Form.Control\r\n            value={description}\r\n            type='text'\r\n            placeholder='Enter a new todo'\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button type='submit'>Save</Button>\r\n          <Button variant='secondary' onClick={() => setOpenModal(false)}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditModal\r\n","import { useEffect, useState } from 'react'\r\nimport { ListGroup, Button, ButtonGroup } from 'react-bootstrap'\r\nimport { URL, useTodoList } from '../contexts/AllTodosContext'\r\nimport DeleteModal from './DeleteModal'\r\nimport EditModal from './EditModal'\r\n\r\nconst ListTodos = () => {\r\n  const { todoList, setTodoList } = useTodoList()\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false)\r\n  const [openEditModal, setOpenEditModal] = useState(false)\r\n  const [activeTodo, setActiveTodo] = useState()\r\n\r\n  const handleDeleteShow = (e) => {\r\n    setActiveTodo(e)\r\n    setOpenDeleteModal(true)\r\n  }\r\n\r\n  const handleToggle = (toggleId) => {\r\n    toggleTodo(toggleId)\r\n    window.location = '/'\r\n  }\r\n\r\n  const toggleTodo = async (toggleId) => {\r\n    try {\r\n      await fetch(`${URL}/toggle/${toggleId}`, { method: 'PUT' })\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const handleEditShow = (e) => {\r\n    setActiveTodo(e)\r\n    setOpenEditModal(true)\r\n  }\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await fetch(URL)\r\n      const data = await response.json()\r\n      setTodoList(data)\r\n    } catch (err) {\r\n      console.error(err.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchTodos()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h1 className='text-center mt-5'>Todo List</h1>\r\n      <div>\r\n        <ListGroup>\r\n          {todoList.length === 0 ? (\r\n            <p>No todos</p>\r\n          ) : (\r\n            <>\r\n              {todoList.map((todo) => (\r\n                <ListGroup.Item\r\n                  className='d-flex justify-content-between'\r\n                  key={todo.todo_id}\r\n                >\r\n                  <p\r\n                    onClick={() => handleToggle(todo.todo_id)}\r\n                    // className={todo.is_done && 'done'}\r\n                    style={{\r\n                      marginTop: '5px',\r\n                      width: '100%',\r\n                      textDecorationLine: `${\r\n                        todo.is_done ? 'line-through' : 'none'\r\n                      } `,\r\n                    }}\r\n                  >\r\n                    {todo.description}\r\n                  </p>\r\n                  <ButtonGroup>\r\n                    <Button onClick={() => handleEditShow(todo)}>\r\n                      <i className='fa fa-edit'></i>\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => handleDeleteShow(todo)}\r\n                      variant='danger'\r\n                    >\r\n                      <i className='fa fa-trash'></i>\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </ListGroup.Item>\r\n              ))}\r\n              {openDeleteModal && (\r\n                <DeleteModal\r\n                  activeTodo={activeTodo}\r\n                  openModal={openDeleteModal}\r\n                  setOpenModal={setOpenDeleteModal}\r\n                />\r\n              )}\r\n              {openEditModal && (\r\n                <EditModal\r\n                  activeTodo={activeTodo}\r\n                  openModal={openEditModal}\r\n                  setOpenModal={setOpenEditModal}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </ListGroup>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListTodos\r\n","import './App.css'\nimport Input from './components/Input'\nimport { Container } from 'react-bootstrap'\nimport ListTodos from './components/ListTodos'\nimport { TodoListProvider } from './contexts/AllTodosContext'\n\nfunction App() {\n  return (\n    <TodoListProvider>\n      <Container>\n        <Input />\n        <ListTodos />\n      </Container>\n    </TodoListProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}