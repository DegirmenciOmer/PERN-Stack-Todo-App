{"version":3,"sources":["contexts/AllTodosContext.js","hooks/useLocalStorage.js","components/Input.js","components/DeleteModal.js","components/EditModal.js","components/ListTodos.js","App.js","index.js"],"names":["TodoListContext","React","createContext","URL","process","useTodoList","useContext","TodoListProvider","children","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useLocalStorage","todoList","setTodoList","description","setDescription","onSubmitTodo","e","a","preventDefault","body","length","alert","fetch","method","headers","window","location","console","log","Provider","Input","className","Form","onSubmit","InputGroup","Control","type","placeholder","onChange","target","Button","variant","DeleteModal","activeTodo","setOpenModal","openModal","handleDelete","deleteId","filter","todo","todo_id","error","Modal","show","onHide","Header","Title","Body","Footer","onClick","EditModal","handleEdit","closeModal","ListTodos","openDeleteModal","setOpenDeleteModal","openEditModal","setOpenEditModal","setActiveTodo","fetchTodos","response","json","data","message","ListGroup","map","Item","ButtonGroup","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f66b5d76.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\nconst TodoListContext = React.createContext()\r\n\r\nexport const URL = process.env.REACT_APP_DEV_URL\r\n\r\nexport function useTodoList() {\r\n  return useContext(TodoListContext)\r\n}\r\n\r\nexport function TodoListProvider({ children }) {\r\n  const [todoList, setTodoList] = useLocalStorage('todolist', [])\r\n  const [description, setDescription] = useState('')\r\n\r\n  const onSubmitTodo = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const body = { description }\r\n\r\n      if (description.length < 3) {\r\n        alert('You must type at least 3 characters')\r\n      } else {\r\n        await fetch(URL, {\r\n          method: 'POST',\r\n          body: JSON.stringify(body),\r\n          headers: { 'Content-Type': 'application/json' },\r\n        })\r\n        setDescription('')\r\n      }\r\n      window.location = '/'\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TodoListContext.Provider\r\n      value={{\r\n        todoList,\r\n        setTodoList,\r\n        onSubmitTodo,\r\n        description,\r\n        setDescription,\r\n      }}\r\n    >\r\n      {children}\r\n    </TodoListContext.Provider>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'pern-todo-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, InputGroup } from 'react-bootstrap'\r\nimport { useTodoList } from './../contexts/AllTodosContext'\r\n\r\nconst Input = () => {\r\n  const { description, setDescription, onSubmitTodo } = useTodoList()\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='text-center mt-5'>Pern Todo App</h1>\r\n      <div>\r\n        <Form onSubmit={onSubmitTodo} className='d-flex mt-5'>\r\n          <InputGroup>\r\n            <Form.Control\r\n              value={description}\r\n              type='text'\r\n              placeholder='Enter a new todo'\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <Button variant='success' type='submit'>\r\n              Add\r\n            </Button>\r\n          </InputGroup>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { URL, useTodoList } from '../contexts/AllTodosContext'\r\n\r\nconst DeleteModal = ({ activeTodo, setOpenModal, openModal }) => {\r\n  const { todoList, setTodoList } = useTodoList()\r\n\r\n  const handleDelete = async (deleteId) => {\r\n    try {\r\n      await fetch(`${URL}/${deleteId}`, { method: 'DELETE' })\r\n      setTodoList(todoList.filter((todo) => todo.todo_id !== deleteId))\r\n      setOpenModal(false)\r\n\r\n      console.log(`${URL}/${deleteId}`)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  return (\r\n    <Modal show={openModal} onHide={() => setOpenModal(false)}>\r\n      <Modal.Header>\r\n        <Modal.Title>Delete Todo</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        Do you want to delete \"{activeTodo.description}\" ?\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant='danger'\r\n          onClick={() => handleDelete(activeTodo.todo_id)}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button variant='secondary' onClick={() => setOpenModal(false)}>\r\n          Cancel\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DeleteModal\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\nimport { URL } from '../contexts/AllTodosContext'\r\n\r\nconst EditModal = ({ activeTodo, setOpenModal, openModal }) => {\r\n  const [description, setDescription] = useState(activeTodo.description)\r\n\r\n  const handleEdit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      const body = { description }\r\n\r\n      await fetch(`${URL}/${activeTodo.todo_id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(body),\r\n        headers: { 'Content-Type': 'application/json' },\r\n      })\r\n      setOpenModal(false)\r\n\r\n      window.location = '/'\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n  return (\r\n    <Modal closeModal show={openModal} onHide={() => setOpenModal(false)}>\r\n      <Modal.Header>\r\n        <Modal.Title>Edit Todo</Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={(e) => handleEdit(e)}>\r\n        <Modal.Body>\r\n          <Form.Control\r\n            value={description}\r\n            type='text'\r\n            placeholder='Enter a new todo'\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button type='submit'>Save</Button>\r\n          <Button variant='secondary' onClick={() => setOpenModal(false)}>\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditModal\r\n","import { useEffect, useState } from 'react'\r\nimport { ListGroup, Button, ButtonGroup } from 'react-bootstrap'\r\nimport { URL, useTodoList } from '../contexts/AllTodosContext'\r\nimport DeleteModal from './DeleteModal'\r\nimport EditModal from './EditModal'\r\n\r\nconst ListTodos = () => {\r\n  const { todoList, setTodoList } = useTodoList()\r\n  const [openDeleteModal, setOpenDeleteModal] = useState(false)\r\n  const [openEditModal, setOpenEditModal] = useState(false)\r\n  const [activeTodo, setActiveTodo] = useState()\r\n\r\n  const handleDeleteShow = (e) => {\r\n    setActiveTodo(e)\r\n    setOpenDeleteModal(true)\r\n  }\r\n\r\n  const handleEditShow = (e) => {\r\n    setActiveTodo(e)\r\n    setOpenEditModal(true)\r\n  }\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await fetch(URL)\r\n      const data = await response.json()\r\n      setTodoList(data)\r\n    } catch (err) {\r\n      console.error(err.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchTodos()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h1 className='text-center mt-5'>Todo List</h1>\r\n      <div>\r\n        <ListGroup>\r\n          {todoList.length === 0 ? (\r\n            <p>No todos</p>\r\n          ) : (\r\n            <>\r\n              {todoList.map((todo) => (\r\n                <ListGroup.Item\r\n                  className='d-flex justify-content-between'\r\n                  key={todo.todo_id}\r\n                >\r\n                  <span>{todo.description}</span>\r\n                  <ButtonGroup>\r\n                    <Button onClick={() => handleEditShow(todo)}>Edit</Button>\r\n                    <Button\r\n                      onClick={() => handleDeleteShow(todo)}\r\n                      variant='danger'\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </ListGroup.Item>\r\n              ))}\r\n              {openDeleteModal && (\r\n                <DeleteModal\r\n                  activeTodo={activeTodo}\r\n                  openModal={openDeleteModal}\r\n                  setOpenModal={setOpenDeleteModal}\r\n                />\r\n              )}\r\n              {openEditModal && (\r\n                <EditModal\r\n                  activeTodo={activeTodo}\r\n                  openModal={openEditModal}\r\n                  setOpenModal={setOpenEditModal}\r\n                />\r\n              )}\r\n            </>\r\n          )}\r\n        </ListGroup>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListTodos\r\n","import './App.css'\nimport Input from './components/Input'\nimport { Container } from 'react-bootstrap'\nimport ListTodos from './components/ListTodos'\nimport { TodoListProvider } from './contexts/AllTodosContext'\n\nfunction App() {\n  return (\n    <TodoListProvider>\n      <Container>\n        <Input />\n        <ListTodos />\n      </Container>\n    </TodoListProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}